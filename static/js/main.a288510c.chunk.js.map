{"version":3,"sources":["component/Basics/Navbar.js","component/Basics/Product.js","component/Basics/ProductList.js","component/Basics/Footer.js","component/Basics/AddItem.js","App.js","index.js"],"names":["Navbar","className","id","type","placeholder","React","Component","Product","props","product","name","price","role","class","onClick","decrementQuantity","index","quantity","incrementQuantity","removeItem","ProductList","productList","length","map","i","Footer","resetQuantity","totalAmount","AddItem","state","productName","productPrice","onSubmit","e","preventDefault","addItem","Number","htmlFor","onChange","setState","currentTarget","value","this","App","useState","setProductList","setTotalAmount","newProductList","push","newTotalAmount","splice","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a288510c.chunk.js","sourcesContent":["import React from 'react'\r\nclass Navbar extends React.Component {\r\n  render() { \r\n    return <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n    <div className=\"container-fluid\">\r\n      <h1>Apna Cart</h1>\r\n      {/* <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n        <span className=\"navbar-toggler-icon\" />\r\n      </button> */}\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        </ul>\r\n        <form className=\"d-flex\">\r\n          <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n          <button className=\"btn btn-outline-success\" type=\"submit\" >Search</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </nav>;\r\n  }\r\n}\r\n export default Navbar;\r\n\r\n// import React from 'react' \r\n\r\n// const Resturant = () => {\r\n//     return (\r\n//         <>\r\n//             <h1>Hello Restaurant</h1>\r\n// sara code yhi likhna hota hai yhi per sari html likhta hai\r\n// css add kerne ke 3 tarike hai. 1st bahar file bna ker, 2nd tag ke last me style= color: \"red\" in double curly breakit\r\n// and 3rd one is tag me ek attribute bnaker uske const ki tarah likhna upper like style=(mystyle) and in const mystyle= color: \"red\"\r\n//         </>\r\n//     );\r\n// };\r\n\r\n// export default Resturant;\r\n","import React from 'react';\r\n\r\nexport default function Product(props) { // isme Product aa rahe honge\r\n\r\n    //function incrementQuantity(index){}\r\n    return (\r\n        // coloumn\r\n    <div className=\"row mt-5\" >      \r\n            <div className=\"col-5\">\r\n                <h2>\r\n                {props.product.name}\r\n                <div className='ml-4'>\r\n                <span className=\"badge bg-secondary\"> â‚¹{props.product.price}</span>\r\n                </div>\r\n                </h2>\r\n            </div>\r\n        <div className=\"col-3\">\r\n            <div className=\"btn-group\" role=\"group\" aria-label=\"Basic mixed styles example\">\r\n             <button type=\"button\" class=\"btn btn-danger\" onClick={() => {props.decrementQuantity(props.index);}}>-</button> {/* anonyoums function = () => */}\r\n                <button type=\"button\" class=\"btn btn-warning\">{props.product.quantity}</button>\r\n                <button type=\"button\" class=\"btn btn-success\" onClick={() => {props.incrementQuantity(props.index);}}>+</button>\r\n             </div>\r\n        </div>\r\n        <div className=\"col-2\">\r\n            {props.product.quantity*props.product.price}\r\n        </div>\r\n        <div className='col-2'>\r\n            <button className='btn btn-danger' onClick={() =>{props.removeItem(props.index)}}> Remove</button>\r\n        </div>\r\n    </div>\r\n    );\r\n}\r\n","import React from 'react'\r\nimport Product from './Product.js'\r\n\r\n\r\n// we have to take Product as a argument in this function 1) as a destructured usnig object name\r\n// (1) export default function ProductList({Product}) {\r\n// (2) using props name and after we use properties with dot+name in div component\r\n    export default function ProductList(props) {\r\n    return (\r\n         props.productList.length > 0  ?\r\n        // this is for loop and its means that  we take a Product and pass is properties form productlist and pass it to Product component\r\n          props.productList.map((product, i)=>{\r\n           return <Product product={product} \r\n           key={i} \r\n           incrementQuantity={props.incrementQuantity} \r\n           index={i} \r\n           decrementQuantity= {props.decrementQuantity}\r\n           removeItem= {props.removeItem}\r\n           />\r\n       })\r\n       : <h1>No Products exsits in the Cart</h1>\r\n    )\r\n}\r\n\r\n","import React from 'react'\r\n\r\nexport default function Footer(props) {\r\n    return (\r\n        <div className='row fixed-bottom mb-5'>\r\n            <button className='btn btn-danger col-2' onClick={() => {props.resetQuantity()}}>Reset</button>\r\n            <div className=\"col-8 bg-dark text-white text-center\">\r\n                {props.totalAmount}\r\n            </div>\r\n            {/* <div className=\"col-8 bg-dark text-white text-center\">\r\n        {props.totalAmount}\r\n      </div> */}\r\n            <button className='btn btn-primary col-2'>PayNow</button>\r\n         </div>\r\n    )\r\n}\r\n","import React from 'react';\r\n\r\n\r\n// when we used class component then we add props and state with the help of this.prop.\r\nclass AddItem extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state= {\r\n                productName:\"\",\r\n                productPrice: \"\",\r\n        };\r\n    }\r\n\r\n    render() { \r\n        return (\r\n             <form className='row' onSubmit={(e) => {\r\n                 e.preventDefault();           // to stop reloading after change\r\n                this.props.addItem(this.state.productName, Number(this.state.productPrice));\r\n                this.state.productName= \"\";\r\n                this.state.productPrice= \"\";\r\n            }}>\r\n    <div className=\"mb-3 col-5 \">\r\n          <label htmlFor=\"inputName\" className=\"form-label\">Name</label>\r\n          <input type=\"text\" \r\n          className=\"form-control\" \r\n          id=\"inputName\" aria-describedby=\"name\" \r\n          name=\"productName\"\r\n          onChange={(e)=>{\r\n                this.setState({\r\n                productName: e.currentTarget.value\r\n                });\r\n          }}\r\n          value={this.state.productName}/>\r\n    </div>\r\n        <div className=\"mb-3 col-5\">\r\n          <label htmlFor=\"inputPrice\" className=\"form-label\">price</label>\r\n          <input type=\"number\" className=\"form-control\" id=\"price\" name=\"productPrice\"\r\n          onChange={(e)=>{\r\n            this.setState({\r\n            productPrice: e.currentTarget.value\r\n            });\r\n      }}\r\n      value={this.state.productPrice}\r\n          />\r\n        </div>\r\n        <button type=\"submit\" className=\"btn btn-primary col-2 \" >ADD</button>\r\n      </form>)\r\n      \r\n    }\r\n}\r\n \r\nexport default AddItem;","//import React from 'react';   // but if we use React in files then we have to add import React from 'react' file.\n\nimport React, {useState} from 'react';  //way to import state in react with state\nimport Navbar from './component/Basics/Navbar';\nimport ProductList from './component/Basics/ProductList.js';\nimport Footer from './component/Basics/Footer.js';\nimport AddItem from './component/Basics/AddItem';\n\nfunction App (){     //is const ko fat arrow khte hai ye function ki jagha aata\n  // this is a array of properties in object(product) and is object ko pass karana hoga component me using props\n  const products=[ \n    {\n    price: 99989,\n    name: \"redminote\",\n    quantity:  0,\n  },\n  {\n    price: 9999,\n    name: \"redmi\",\n    quantity:  0,\n  },\n];\n//a state usnig hooks, we have to pass the some value in useState like empty array[], empty object{}\nlet [productList , setProductList]= useState(products);\nlet [totalAmount, setTotalAmount]= useState(0);\n//function for increment\nconst incrementQuantity = (index) =>{\n  //for change in state, we have to copy old state and store in variable\n  let newProductList= [...productList]   //copy syntex(spread operator)\n  let newTotalAmount = totalAmount;     //copy old totalamount\n  newProductList[index].quantity++;  \n  newTotalAmount += newProductList[index].price;      //add current price in old total amount\n  setTotalAmount(newTotalAmount)     \n  setProductList(newProductList);\n};\nconst decrementQuantity = (index) =>{\n  //for change in state, we have to copy old state and store in variable4\n  let newProductList= [...productList];    //copy syntex(spread operator)\n  let newTotalAmount = totalAmount; \n  if(newProductList[index].quantity >0){\n    newProductList[index].quantity--;  \n    newTotalAmount -= newProductList[index].price;\n  }\n  // terniry operator= newProductList[index].quantity >0 ? newProductList[index].quantity-- : (newProductList[index].quantity =0);\n  setTotalAmount(newTotalAmount);\n  setProductList(newProductList);\n};\n\n\n// reset function\nconst resetQuantity= ()=>{\n  let newProductList= [...productList]\n  newProductList.map((product)=> {\n    product.quantity=0;\n  });\n  setProductList(newProductList);\n  setTotalAmount(0);\n};\n\n// remove item function\nconst removeItem=(index) =>{\n  let newProductList= [...productList];\n  let newTotalAmount= totalAmount;\n  newTotalAmount-= newProductList[index].quantity * newProductList[index].price;\n  newProductList.splice(index, 1);  //for remove the function (in javaScript)\n  setProductList(newProductList);\n  setTotalAmount(newTotalAmount);\n};\n\n\n// add item function\nconst addItem= (name, price)=> {\n   let newProductList= [...productList]; // a new list\n    newProductList.push({      //push method to add in array\n      price:price,\n      name:name,\n      quantity:0,\n\n    });\n    setProductList(newProductList); \n  }\n\n  return (\n           <> \n           <Navbar/>\n           <main className=\"container mt-5\">\n          <AddItem addItem={addItem}/>\n           <ProductList productList={productList} \n           incrementQuantity={incrementQuantity} \n           decrementQuantity={decrementQuantity}\n           removeItem={removeItem}\n           />\n           </main>\n           <Footer totalAmount={totalAmount} resetQuantity={resetQuantity}/>\n           </>\n      );\n    // the code who looks like html code called JSX (java script extension), from use of this we can use only one tag because JSX show only one element at a time.\n   };\n   export default App\n    // <p>awsome<\\> wrong method \n    //<React.Fragment> </React.Fragment>  shortcut for this is =<>.....<\\>\n    //here we always use classname attribute insted of class attribute which was used in css.\n    //always use closing tag for anybody. like h1 have closing tag but image src dont so but in JXS we have to close image tag.   \n    //ClassName= here N is capital. called camelcase convension.\n\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}